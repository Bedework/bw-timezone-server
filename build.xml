<?xml version="1.0"?>

<!-- This is the ant build file for the timezones package.

     Authors: Mike Douglass   douglm  rpi.edu
-->

<project name="tzsvr" default="deploy">
  <taskdef resource="net/sf/antcontrib/antcontrib.properties" />

  <property environment="env"/>
  <dirname property="project.home" file="${ant.file}"/>

  <property file="${project.home}/build.properties" />
  
  <property name="bedework.home"
            location="${project.home}/../bedework" />

  <property name="build.dir" location="${bedework.home}/build"/>

  <import file="${build.dir}/buildTools/deftasks.xml"/>

  <deftasks/>

  <projectDefs name="${org.bedework.package.name}"
               version="${org.bedework.bwtzsvr.version}" 
               deployment-name="tzsvr"
  />

  <import file="${build.dir}/loadDeployConfig.xml"/>
  <import file="${build.dir}/buildTools/xjc.xml"/>

  <import file="${project.home}/appjars.xml" />

  <property name="org.bedework.sou.classpath.properties"
            location="${project.home}/resources" />
  
  <property name="org.bedework.sou.hibernate.properties"
            location="${project.home}/resources/hibernate" />

  <property name="org.bedework.jboss.datasource.jndiname"
            value="${org.bedework.global.jboss.tzdb.datasource.jndiname}" />

  <property name="ear.meta.dir" location="${project.home}/ear.meta"/>

  <!-- =================================================================
       init:
       ================================================================= -->

  <target name="init">
    <projectInit/>
    
    <property name="org.bedework.project.bedework"
              location="${project.home}/../bedework" />

    <loadDeployConfig />

    <property name="org.bedework.deploy.name"
              value="${ant.project.name}" />
  	
    <propertyset id="deploy-app-properties">
      <propertyref prefix="org.bedework.app.${org.bedework.deploy.name}"/>
      <globmapper from="org.bedework.app.${org.bedework.deploy.name}.*" to="propval.app.*"/>
    </propertyset>

    <property name="org.bedework.temp.wars.home"
              location="${dist.home}/temp/wars" />
    
    <if>
      <not>
        <isset property="org.bedework.global.context.roots" />
      </not>
      <then>
        <tempfile property="org.bedework.global.context.roots"
                  destdir="${org.bedework.temp.dir}"
                  prefix="context-roots" suffix=".properties" />
      </then>
    </if>

  	<property name="org.bedework.options.file"
  	          value="${org.bedework.config.options}" />

    <property name="org.bedework.module.common.base"
              location="${project.home}/common" />

    <property name="org.bedework.module.server.base" 
              location="${project.home}/server" />

    <property name="org.bedework.module.service.base"
              location="${project.home}/service" />
    
    <property name="org.bedework.module.schema.dir" 
              location="${bedework.home}/resources/timezones" />

    <property name="common.jar"
              location="${dist.home}/${org.bedework.module.common.jar}-${project.version}.jar" />

    <property name="server.jar"
              location="${dist.home}/${org.bedework.module.server.jar}-${project.version}.jar" />

    <property name="service.jar"
              location="${dist.home}/${org.bedework.module.service.jar}-${project.version}.jar" />
    </target>
    
  <target name="build-init" depends="init">
    <!-- Make sure bwxml is built -->
    <ant antfile="${project.home}/../bwxml/build.xml" inheritall="false" />

    <property name="org.bedework.getjar.property.prefix"
              value="org.bedework.appjar" />

    <getJar name="commons-codec" version="1.3" />
    <getJar name="commons-httpclient" version="3.0" />
    <getJar name="commons-lang" version="2.1" />
    <getJar name="ehcache" version="1.6.2" />
    <getJar name="hibernate" version="3.3.1.ga" />
    <getJar name="ical4j" version="1.0-rc3-SNAPSHOT" />
    <getJar name="log4j" version="1.2.8" />
    <getJar name="servletapi" version="2.4" />

    <getJar name="rpiutil" version="${org.bedework.rpiutil.version}" project="rpiutil" 
            projecthome="${project.home}/../rpiutil" />

    <getJar name="bw-tzschema" version="${org.bedework.bwxml.version}"
            project="bwxml"
            projecthome="${project.home}/../bwxml" />

    <getJar name="bw-calws-soapschema" 
            version="${org.bedework.bwxml.version}" project="bwxml" 
            projecthome="${bedework.home}/../bwxml" />
  </target>

  <target name="deploy-init" depends="init">
    <deployInit ear-name="bw-${ant.project.name}" />
  </target>

  <!-- ===================== build-source Target ===============================
     This target builds jar files ready for the deploy target.
     =================================================================== -->

  <target name="build-source"  depends="build-init" >
    <build-jar module-base="${org.bedework.module.common.base}" 
               jar-file="${common.jar}" />
    
    <build-jar module-base="${org.bedework.module.server.base}" 
               jar-file="${server.jar}" />
    
    <build-jar module-base="${org.bedework.module.service.base}" 
               jar-file="${service.jar}" />
    
    <getExtraJars/>

    <!-- ===============================================================
         Build the war
         =============================================================== -->
         
    <property name="app.sou.dir"
              location="${org.bedework.module.server.base}" />

    <ant antfile="${buildwar}" inheritRefs="true" target="build" >
      <propertyset refid="deploy-app-properties" />
    </ant>
  </target>
 
  <!-- ===================== deploy Target ===============================
     Deploy if an application server is defined.
     =================================================================== -->

  <target name="deploy.zoneinfo" depends="deploy-init"
          description="Deploy zoneinfo data">
    <!--
  	<copy file="${project.home}/tzdata.zip"
  	      todir="${org.bedework.appserver.dir}/${org.bedework.server.resource.root.dir}" />
  	      -->
    <copy file="${project.home}/tzdata.zip"
          todir="${org.bedework.data.dir}" />
  </target>

  <target name="deploy" depends="deploy-init,build"
               description="Deploy generated files">
    <getExtraJars/>

    <ant antfile="${build.dir}/../deployment/termination/webapp/build.xml" 
         target="deploy" inheritRefs="true"  >
      <property name="org.bedework.no.extra.ear.jars" value="yes" />
      <propertyset refid="deploy-app-properties" />
    </ant>
    
    <!-- Platform specific -->
    <ant antfile="${build.dir}/../deployment/termination/build.xml" 
         target="deploy" inheritRefs="true" >
      <propertyset refid="deploy-app-properties" />
    </ant>
  </target>

  <!-- ==================== Javadoc Target ===============================
       The "javadoc" target creates Javadoc API documentation for the Java
       classes included in your application.  Normally, this is only required
       when preparing a distribution release, but is available as a separate
       target in case the developer wants to create Javadocs independently.
       =================================================================== -->

  <target name="javadoc" depends="init"
          description="Create Javadoc API documentation">
    <property name="destdir" location="${dist.home}/docs/api"/>
    <mkdir dir="${destdir}"/>

    <javadoc sourcepath="${org.bedework.module.common.base}/src:${org.bedework.module.service.base}/src:${org.bedework.module.server.base}/src:"
           classpathref="compile.classpath"
                destdir="${destdir}"
               overview="${project.home}/overview.html"
           packagenames="org.bedework.*,
                         edu.rpi.*"
                 access="public"
                 author="true"
                version="true"
          breakiterator="yes"
            windowtitle="${project.name} ${project.version} Timezones Documentation">
      <doctitle><![CDATA[${project.name} ${project.version}<br/>Timezones Documentation]]></doctitle>
      <header><![CDATA[${project.name} ${project.version}<br/>Timezones Documentation]]></header>
      <link href="${env.JAVA_HOME}/docs/api" />
    </javadoc>
  </target>
</project>
